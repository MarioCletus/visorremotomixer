// Generated by view binder compiler. Do not edit!
package com.basculasmagris.visorremotomixer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.basculasmagris.visorremotomixer.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddUpdateUserBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnAddUser;

  @NonNull
  public final ConstraintLayout clCreateMixer;

  @NonNull
  public final EditText etRoleRef;

  @NonNull
  public final EditText etUserLastname;

  @NonNull
  public final EditText etUserMail;

  @NonNull
  public final EditText etUserName;

  @NonNull
  public final EditText etUserPassword;

  @NonNull
  public final FrameLayout flUserFrameLayout;

  @NonNull
  public final ImageView ivAddUserImage;

  @NonNull
  public final ImageView ivUserImage;

  @NonNull
  public final LinearLayout llForScroll;

  @NonNull
  public final ScrollView svUser;

  @NonNull
  public final TextInputLayout tiRoleRef;

  @NonNull
  public final TextInputLayout tiUserLastname;

  @NonNull
  public final TextInputLayout tiUserMail;

  @NonNull
  public final TextInputLayout tiUserName;

  @NonNull
  public final TextInputLayout tiUserPassword;

  @NonNull
  public final Toolbar toolbarAddUpdateUser;

  private ActivityAddUpdateUserBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnAddUser, @NonNull ConstraintLayout clCreateMixer,
      @NonNull EditText etRoleRef, @NonNull EditText etUserLastname, @NonNull EditText etUserMail,
      @NonNull EditText etUserName, @NonNull EditText etUserPassword,
      @NonNull FrameLayout flUserFrameLayout, @NonNull ImageView ivAddUserImage,
      @NonNull ImageView ivUserImage, @NonNull LinearLayout llForScroll, @NonNull ScrollView svUser,
      @NonNull TextInputLayout tiRoleRef, @NonNull TextInputLayout tiUserLastname,
      @NonNull TextInputLayout tiUserMail, @NonNull TextInputLayout tiUserName,
      @NonNull TextInputLayout tiUserPassword, @NonNull Toolbar toolbarAddUpdateUser) {
    this.rootView = rootView;
    this.btnAddUser = btnAddUser;
    this.clCreateMixer = clCreateMixer;
    this.etRoleRef = etRoleRef;
    this.etUserLastname = etUserLastname;
    this.etUserMail = etUserMail;
    this.etUserName = etUserName;
    this.etUserPassword = etUserPassword;
    this.flUserFrameLayout = flUserFrameLayout;
    this.ivAddUserImage = ivAddUserImage;
    this.ivUserImage = ivUserImage;
    this.llForScroll = llForScroll;
    this.svUser = svUser;
    this.tiRoleRef = tiRoleRef;
    this.tiUserLastname = tiUserLastname;
    this.tiUserMail = tiUserMail;
    this.tiUserName = tiUserName;
    this.tiUserPassword = tiUserPassword;
    this.toolbarAddUpdateUser = toolbarAddUpdateUser;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddUpdateUserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddUpdateUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_update_user, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddUpdateUserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_add_user;
      Button btnAddUser = ViewBindings.findChildViewById(rootView, id);
      if (btnAddUser == null) {
        break missingId;
      }

      id = R.id.cl_create_mixer;
      ConstraintLayout clCreateMixer = ViewBindings.findChildViewById(rootView, id);
      if (clCreateMixer == null) {
        break missingId;
      }

      id = R.id.et_role_ref;
      EditText etRoleRef = ViewBindings.findChildViewById(rootView, id);
      if (etRoleRef == null) {
        break missingId;
      }

      id = R.id.et_user_lastname;
      EditText etUserLastname = ViewBindings.findChildViewById(rootView, id);
      if (etUserLastname == null) {
        break missingId;
      }

      id = R.id.et_user_mail;
      EditText etUserMail = ViewBindings.findChildViewById(rootView, id);
      if (etUserMail == null) {
        break missingId;
      }

      id = R.id.et_user_name;
      EditText etUserName = ViewBindings.findChildViewById(rootView, id);
      if (etUserName == null) {
        break missingId;
      }

      id = R.id.et_user_password;
      EditText etUserPassword = ViewBindings.findChildViewById(rootView, id);
      if (etUserPassword == null) {
        break missingId;
      }

      id = R.id.fl_user_frameLayout;
      FrameLayout flUserFrameLayout = ViewBindings.findChildViewById(rootView, id);
      if (flUserFrameLayout == null) {
        break missingId;
      }

      id = R.id.iv_add_user_image;
      ImageView ivAddUserImage = ViewBindings.findChildViewById(rootView, id);
      if (ivAddUserImage == null) {
        break missingId;
      }

      id = R.id.iv_user_image;
      ImageView ivUserImage = ViewBindings.findChildViewById(rootView, id);
      if (ivUserImage == null) {
        break missingId;
      }

      id = R.id.ll_for_scroll;
      LinearLayout llForScroll = ViewBindings.findChildViewById(rootView, id);
      if (llForScroll == null) {
        break missingId;
      }

      id = R.id.sv_user;
      ScrollView svUser = ViewBindings.findChildViewById(rootView, id);
      if (svUser == null) {
        break missingId;
      }

      id = R.id.ti_role_ref;
      TextInputLayout tiRoleRef = ViewBindings.findChildViewById(rootView, id);
      if (tiRoleRef == null) {
        break missingId;
      }

      id = R.id.ti_user_lastname;
      TextInputLayout tiUserLastname = ViewBindings.findChildViewById(rootView, id);
      if (tiUserLastname == null) {
        break missingId;
      }

      id = R.id.ti_user_mail;
      TextInputLayout tiUserMail = ViewBindings.findChildViewById(rootView, id);
      if (tiUserMail == null) {
        break missingId;
      }

      id = R.id.ti_user_name;
      TextInputLayout tiUserName = ViewBindings.findChildViewById(rootView, id);
      if (tiUserName == null) {
        break missingId;
      }

      id = R.id.ti_user_password;
      TextInputLayout tiUserPassword = ViewBindings.findChildViewById(rootView, id);
      if (tiUserPassword == null) {
        break missingId;
      }

      id = R.id.toolbar_add_update_user;
      Toolbar toolbarAddUpdateUser = ViewBindings.findChildViewById(rootView, id);
      if (toolbarAddUpdateUser == null) {
        break missingId;
      }

      return new ActivityAddUpdateUserBinding((ConstraintLayout) rootView, btnAddUser,
          clCreateMixer, etRoleRef, etUserLastname, etUserMail, etUserName, etUserPassword,
          flUserFrameLayout, ivAddUserImage, ivUserImage, llForScroll, svUser, tiRoleRef,
          tiUserLastname, tiUserMail, tiUserName, tiUserPassword, toolbarAddUpdateUser);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
