// Generated by view binder compiler. Do not edit!
package com.basculasmagris.visorremotomixer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.basculasmagris.visorremotomixer.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemRoundToRunLayoutBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final Button btnStartRound;

  @NonNull
  public final Button btnStopRound;

  @NonNull
  public final ImageButton ibMoreRoundRun;

  @NonNull
  public final ConstraintLayout llActionsBlock;

  @NonNull
  public final LinearLayout llProgressBar;

  @NonNull
  public final LinearLayout llProgressBlock;

  @NonNull
  public final ProgressBar pbRoundRun;

  @NonNull
  public final MaterialCardView roundCard;

  @NonNull
  public final TextView tvRoundName;

  @NonNull
  public final TextView tvRoundRunDescription;

  @NonNull
  public final TextView tvRoundRunPercentage;

  @NonNull
  public final TextView tvRoundStartDate;

  private ItemRoundToRunLayoutBinding(@NonNull MaterialCardView rootView,
      @NonNull Button btnStartRound, @NonNull Button btnStopRound,
      @NonNull ImageButton ibMoreRoundRun, @NonNull ConstraintLayout llActionsBlock,
      @NonNull LinearLayout llProgressBar, @NonNull LinearLayout llProgressBlock,
      @NonNull ProgressBar pbRoundRun, @NonNull MaterialCardView roundCard,
      @NonNull TextView tvRoundName, @NonNull TextView tvRoundRunDescription,
      @NonNull TextView tvRoundRunPercentage, @NonNull TextView tvRoundStartDate) {
    this.rootView = rootView;
    this.btnStartRound = btnStartRound;
    this.btnStopRound = btnStopRound;
    this.ibMoreRoundRun = ibMoreRoundRun;
    this.llActionsBlock = llActionsBlock;
    this.llProgressBar = llProgressBar;
    this.llProgressBlock = llProgressBlock;
    this.pbRoundRun = pbRoundRun;
    this.roundCard = roundCard;
    this.tvRoundName = tvRoundName;
    this.tvRoundRunDescription = tvRoundRunDescription;
    this.tvRoundRunPercentage = tvRoundRunPercentage;
    this.tvRoundStartDate = tvRoundStartDate;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemRoundToRunLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemRoundToRunLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_round_to_run_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemRoundToRunLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_start_round;
      Button btnStartRound = ViewBindings.findChildViewById(rootView, id);
      if (btnStartRound == null) {
        break missingId;
      }

      id = R.id.btn_stop_round;
      Button btnStopRound = ViewBindings.findChildViewById(rootView, id);
      if (btnStopRound == null) {
        break missingId;
      }

      id = R.id.ib_more_round_run;
      ImageButton ibMoreRoundRun = ViewBindings.findChildViewById(rootView, id);
      if (ibMoreRoundRun == null) {
        break missingId;
      }

      id = R.id.ll_actions_block;
      ConstraintLayout llActionsBlock = ViewBindings.findChildViewById(rootView, id);
      if (llActionsBlock == null) {
        break missingId;
      }

      id = R.id.ll_progress_bar;
      LinearLayout llProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (llProgressBar == null) {
        break missingId;
      }

      id = R.id.ll_progress_block;
      LinearLayout llProgressBlock = ViewBindings.findChildViewById(rootView, id);
      if (llProgressBlock == null) {
        break missingId;
      }

      id = R.id.pb_round_run;
      ProgressBar pbRoundRun = ViewBindings.findChildViewById(rootView, id);
      if (pbRoundRun == null) {
        break missingId;
      }

      MaterialCardView roundCard = (MaterialCardView) rootView;

      id = R.id.tv_round_name;
      TextView tvRoundName = ViewBindings.findChildViewById(rootView, id);
      if (tvRoundName == null) {
        break missingId;
      }

      id = R.id.tv_round_run_description;
      TextView tvRoundRunDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvRoundRunDescription == null) {
        break missingId;
      }

      id = R.id.tv_round_run_percentage;
      TextView tvRoundRunPercentage = ViewBindings.findChildViewById(rootView, id);
      if (tvRoundRunPercentage == null) {
        break missingId;
      }

      id = R.id.tv_round_start_date;
      TextView tvRoundStartDate = ViewBindings.findChildViewById(rootView, id);
      if (tvRoundStartDate == null) {
        break missingId;
      }

      return new ItemRoundToRunLayoutBinding((MaterialCardView) rootView, btnStartRound,
          btnStopRound, ibMoreRoundRun, llActionsBlock, llProgressBar, llProgressBlock, pbRoundRun,
          roundCard, tvRoundName, tvRoundRunDescription, tvRoundRunPercentage, tvRoundStartDate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
