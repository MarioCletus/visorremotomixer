// Generated by view binder compiler. Do not edit!
package com.basculasmagris.visorremotomixer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.basculasmagris.visorremotomixer.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemLineDietProductBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText etPercentage;

  @NonNull
  public final EditText etWeight;

  @NonNull
  public final TextInputLayout tiPercentage;

  @NonNull
  public final TextInputLayout tiWeight;

  @NonNull
  public final TextView tvProductDescription;

  @NonNull
  public final TextView tvProductName;

  @NonNull
  public final TextView tvProductOrder;

  private ItemLineDietProductBinding(@NonNull LinearLayout rootView, @NonNull EditText etPercentage,
      @NonNull EditText etWeight, @NonNull TextInputLayout tiPercentage,
      @NonNull TextInputLayout tiWeight, @NonNull TextView tvProductDescription,
      @NonNull TextView tvProductName, @NonNull TextView tvProductOrder) {
    this.rootView = rootView;
    this.etPercentage = etPercentage;
    this.etWeight = etWeight;
    this.tiPercentage = tiPercentage;
    this.tiWeight = tiWeight;
    this.tvProductDescription = tvProductDescription;
    this.tvProductName = tvProductName;
    this.tvProductOrder = tvProductOrder;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemLineDietProductBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemLineDietProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_line_diet_product, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemLineDietProductBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.et_percentage;
      EditText etPercentage = ViewBindings.findChildViewById(rootView, id);
      if (etPercentage == null) {
        break missingId;
      }

      id = R.id.et_weight;
      EditText etWeight = ViewBindings.findChildViewById(rootView, id);
      if (etWeight == null) {
        break missingId;
      }

      id = R.id.ti_percentage;
      TextInputLayout tiPercentage = ViewBindings.findChildViewById(rootView, id);
      if (tiPercentage == null) {
        break missingId;
      }

      id = R.id.ti_weight;
      TextInputLayout tiWeight = ViewBindings.findChildViewById(rootView, id);
      if (tiWeight == null) {
        break missingId;
      }

      id = R.id.tv_product_description;
      TextView tvProductDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvProductDescription == null) {
        break missingId;
      }

      id = R.id.tv_product_name;
      TextView tvProductName = ViewBindings.findChildViewById(rootView, id);
      if (tvProductName == null) {
        break missingId;
      }

      id = R.id.tv_product_order;
      TextView tvProductOrder = ViewBindings.findChildViewById(rootView, id);
      if (tvProductOrder == null) {
        break missingId;
      }

      return new ItemLineDietProductBinding((LinearLayout) rootView, etPercentage, etWeight,
          tiPercentage, tiWeight, tvProductDescription, tvProductName, tvProductOrder);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
