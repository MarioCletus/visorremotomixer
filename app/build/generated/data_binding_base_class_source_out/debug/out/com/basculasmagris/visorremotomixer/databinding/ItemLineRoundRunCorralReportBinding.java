// Generated by view binder compiler. Do not edit!
package com.basculasmagris.visorremotomixer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.basculasmagris.visorremotomixer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemLineRoundRunCorralReportBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ProgressBar pbCurrentCorral;

  @NonNull
  public final TextView tvCorralDifference;

  @NonNull
  public final TextView tvCorralName;

  @NonNull
  public final TextView tvCurrentCorralPercentage;

  @NonNull
  public final TextView tvCurrentCorralWeightOf;

  private ItemLineRoundRunCorralReportBinding(@NonNull LinearLayout rootView,
      @NonNull ProgressBar pbCurrentCorral, @NonNull TextView tvCorralDifference,
      @NonNull TextView tvCorralName, @NonNull TextView tvCurrentCorralPercentage,
      @NonNull TextView tvCurrentCorralWeightOf) {
    this.rootView = rootView;
    this.pbCurrentCorral = pbCurrentCorral;
    this.tvCorralDifference = tvCorralDifference;
    this.tvCorralName = tvCorralName;
    this.tvCurrentCorralPercentage = tvCurrentCorralPercentage;
    this.tvCurrentCorralWeightOf = tvCurrentCorralWeightOf;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemLineRoundRunCorralReportBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemLineRoundRunCorralReportBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_line_round_run_corral_report, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemLineRoundRunCorralReportBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.pb_current_corral;
      ProgressBar pbCurrentCorral = ViewBindings.findChildViewById(rootView, id);
      if (pbCurrentCorral == null) {
        break missingId;
      }

      id = R.id.tv_corral_difference;
      TextView tvCorralDifference = ViewBindings.findChildViewById(rootView, id);
      if (tvCorralDifference == null) {
        break missingId;
      }

      id = R.id.tv_corral_name;
      TextView tvCorralName = ViewBindings.findChildViewById(rootView, id);
      if (tvCorralName == null) {
        break missingId;
      }

      id = R.id.tv_current_corral_percentage;
      TextView tvCurrentCorralPercentage = ViewBindings.findChildViewById(rootView, id);
      if (tvCurrentCorralPercentage == null) {
        break missingId;
      }

      id = R.id.tv_current_corral_weight_of;
      TextView tvCurrentCorralWeightOf = ViewBindings.findChildViewById(rootView, id);
      if (tvCurrentCorralWeightOf == null) {
        break missingId;
      }

      return new ItemLineRoundRunCorralReportBinding((LinearLayout) rootView, pbCurrentCorral,
          tvCorralDifference, tvCorralName, tvCurrentCorralPercentage, tvCurrentCorralWeightOf);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
