// Generated by view binder compiler. Do not edit!
package com.basculasmagris.visorremotomixer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.basculasmagris.visorremotomixer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTabletMixerConfigBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView bluetoothIcon;

  @NonNull
  public final Button btnSincro;

  @NonNull
  public final EditText etTabletMixerDescription;

  @NonNull
  public final EditText etTabletMixerName;

  @NonNull
  public final Guideline guidelineEnd;

  @NonNull
  public final Guideline guidelineMain;

  @NonNull
  public final ImageView iconCirc1;

  @NonNull
  public final ImageView iconCirc2;

  @NonNull
  public final ConstraintLayout itemDetail;

  @NonNull
  public final ImageButton ivExitConfig;

  @NonNull
  public final ImageView keyboardIcon;

  @NonNull
  public final ConstraintLayout layBTAsoc;

  @NonNull
  public final ConstraintLayout layTabletMixerModel;

  @NonNull
  public final ConstraintLayout layTabletMixerName;

  @NonNull
  public final LinearLayout llConnectionStatus;

  @NonNull
  public final LinearLayout llKeyboard;

  @NonNull
  public final LinearLayout llSyncMixers;

  @NonNull
  public final LinearLayout llSyncProgress;

  @NonNull
  public final LinearLayout llSyncRounds;

  @NonNull
  public final LinearLayout llSyncUsers;

  @NonNull
  public final ImageView logoFullColor;

  @NonNull
  public final ProgressBar pbMixers;

  @NonNull
  public final ProgressBar pbRounds;

  @NonNull
  public final ProgressBar pbUsers;

  @NonNull
  public final ConstraintLayout remoteViewerCustomMenu;

  @NonNull
  public final ImageView remoteViewerIcon;

  @NonNull
  public final TextView titCajaBluetooth;

  @NonNull
  public final TextView titModelo;

  @NonNull
  public final TextView titNombre;

  @NonNull
  public final Toolbar toolbarConfigTabletMixer;

  @NonNull
  public final TextView tvCajaBluetoothAsoc;

  @NonNull
  public final TextView tvMac;

  @NonNull
  public final TextView tvMixersPercentage;

  @NonNull
  public final TextView tvRoundsPercentage;

  @NonNull
  public final TextView tvTitleTabletMixer;

  @NonNull
  public final TextView tvUsersPercentage;

  @NonNull
  public final ConstraintLayout viewActivityTabletMixerConfig;

  private ActivityTabletMixerConfigBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView bluetoothIcon, @NonNull Button btnSincro,
      @NonNull EditText etTabletMixerDescription, @NonNull EditText etTabletMixerName,
      @NonNull Guideline guidelineEnd, @NonNull Guideline guidelineMain,
      @NonNull ImageView iconCirc1, @NonNull ImageView iconCirc2,
      @NonNull ConstraintLayout itemDetail, @NonNull ImageButton ivExitConfig,
      @NonNull ImageView keyboardIcon, @NonNull ConstraintLayout layBTAsoc,
      @NonNull ConstraintLayout layTabletMixerModel, @NonNull ConstraintLayout layTabletMixerName,
      @NonNull LinearLayout llConnectionStatus, @NonNull LinearLayout llKeyboard,
      @NonNull LinearLayout llSyncMixers, @NonNull LinearLayout llSyncProgress,
      @NonNull LinearLayout llSyncRounds, @NonNull LinearLayout llSyncUsers,
      @NonNull ImageView logoFullColor, @NonNull ProgressBar pbMixers,
      @NonNull ProgressBar pbRounds, @NonNull ProgressBar pbUsers,
      @NonNull ConstraintLayout remoteViewerCustomMenu, @NonNull ImageView remoteViewerIcon,
      @NonNull TextView titCajaBluetooth, @NonNull TextView titModelo, @NonNull TextView titNombre,
      @NonNull Toolbar toolbarConfigTabletMixer, @NonNull TextView tvCajaBluetoothAsoc,
      @NonNull TextView tvMac, @NonNull TextView tvMixersPercentage,
      @NonNull TextView tvRoundsPercentage, @NonNull TextView tvTitleTabletMixer,
      @NonNull TextView tvUsersPercentage,
      @NonNull ConstraintLayout viewActivityTabletMixerConfig) {
    this.rootView = rootView;
    this.bluetoothIcon = bluetoothIcon;
    this.btnSincro = btnSincro;
    this.etTabletMixerDescription = etTabletMixerDescription;
    this.etTabletMixerName = etTabletMixerName;
    this.guidelineEnd = guidelineEnd;
    this.guidelineMain = guidelineMain;
    this.iconCirc1 = iconCirc1;
    this.iconCirc2 = iconCirc2;
    this.itemDetail = itemDetail;
    this.ivExitConfig = ivExitConfig;
    this.keyboardIcon = keyboardIcon;
    this.layBTAsoc = layBTAsoc;
    this.layTabletMixerModel = layTabletMixerModel;
    this.layTabletMixerName = layTabletMixerName;
    this.llConnectionStatus = llConnectionStatus;
    this.llKeyboard = llKeyboard;
    this.llSyncMixers = llSyncMixers;
    this.llSyncProgress = llSyncProgress;
    this.llSyncRounds = llSyncRounds;
    this.llSyncUsers = llSyncUsers;
    this.logoFullColor = logoFullColor;
    this.pbMixers = pbMixers;
    this.pbRounds = pbRounds;
    this.pbUsers = pbUsers;
    this.remoteViewerCustomMenu = remoteViewerCustomMenu;
    this.remoteViewerIcon = remoteViewerIcon;
    this.titCajaBluetooth = titCajaBluetooth;
    this.titModelo = titModelo;
    this.titNombre = titNombre;
    this.toolbarConfigTabletMixer = toolbarConfigTabletMixer;
    this.tvCajaBluetoothAsoc = tvCajaBluetoothAsoc;
    this.tvMac = tvMac;
    this.tvMixersPercentage = tvMixersPercentage;
    this.tvRoundsPercentage = tvRoundsPercentage;
    this.tvTitleTabletMixer = tvTitleTabletMixer;
    this.tvUsersPercentage = tvUsersPercentage;
    this.viewActivityTabletMixerConfig = viewActivityTabletMixerConfig;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTabletMixerConfigBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTabletMixerConfigBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_tablet_mixer_config, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTabletMixerConfigBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bluetooth_icon;
      ImageView bluetoothIcon = ViewBindings.findChildViewById(rootView, id);
      if (bluetoothIcon == null) {
        break missingId;
      }

      id = R.id.btn_sincro;
      Button btnSincro = ViewBindings.findChildViewById(rootView, id);
      if (btnSincro == null) {
        break missingId;
      }

      id = R.id.et_tablet_mixer_description;
      EditText etTabletMixerDescription = ViewBindings.findChildViewById(rootView, id);
      if (etTabletMixerDescription == null) {
        break missingId;
      }

      id = R.id.et_tablet_mixer_name;
      EditText etTabletMixerName = ViewBindings.findChildViewById(rootView, id);
      if (etTabletMixerName == null) {
        break missingId;
      }

      id = R.id.guidelineEnd;
      Guideline guidelineEnd = ViewBindings.findChildViewById(rootView, id);
      if (guidelineEnd == null) {
        break missingId;
      }

      id = R.id.guidelineMain;
      Guideline guidelineMain = ViewBindings.findChildViewById(rootView, id);
      if (guidelineMain == null) {
        break missingId;
      }

      id = R.id.iconCirc1;
      ImageView iconCirc1 = ViewBindings.findChildViewById(rootView, id);
      if (iconCirc1 == null) {
        break missingId;
      }

      id = R.id.iconCirc2;
      ImageView iconCirc2 = ViewBindings.findChildViewById(rootView, id);
      if (iconCirc2 == null) {
        break missingId;
      }

      id = R.id.item_detail;
      ConstraintLayout itemDetail = ViewBindings.findChildViewById(rootView, id);
      if (itemDetail == null) {
        break missingId;
      }

      id = R.id.iv_exit_config;
      ImageButton ivExitConfig = ViewBindings.findChildViewById(rootView, id);
      if (ivExitConfig == null) {
        break missingId;
      }

      id = R.id.keyboard_icon;
      ImageView keyboardIcon = ViewBindings.findChildViewById(rootView, id);
      if (keyboardIcon == null) {
        break missingId;
      }

      id = R.id.layBTAsoc;
      ConstraintLayout layBTAsoc = ViewBindings.findChildViewById(rootView, id);
      if (layBTAsoc == null) {
        break missingId;
      }

      id = R.id.lay_tablet_mixer_model;
      ConstraintLayout layTabletMixerModel = ViewBindings.findChildViewById(rootView, id);
      if (layTabletMixerModel == null) {
        break missingId;
      }

      id = R.id.lay_tablet_mixer_name;
      ConstraintLayout layTabletMixerName = ViewBindings.findChildViewById(rootView, id);
      if (layTabletMixerName == null) {
        break missingId;
      }

      id = R.id.ll_connection_status;
      LinearLayout llConnectionStatus = ViewBindings.findChildViewById(rootView, id);
      if (llConnectionStatus == null) {
        break missingId;
      }

      id = R.id.ll_keyboard;
      LinearLayout llKeyboard = ViewBindings.findChildViewById(rootView, id);
      if (llKeyboard == null) {
        break missingId;
      }

      id = R.id.ll_sync_mixers;
      LinearLayout llSyncMixers = ViewBindings.findChildViewById(rootView, id);
      if (llSyncMixers == null) {
        break missingId;
      }

      id = R.id.ll_sync_progress;
      LinearLayout llSyncProgress = ViewBindings.findChildViewById(rootView, id);
      if (llSyncProgress == null) {
        break missingId;
      }

      id = R.id.ll_sync_rounds;
      LinearLayout llSyncRounds = ViewBindings.findChildViewById(rootView, id);
      if (llSyncRounds == null) {
        break missingId;
      }

      id = R.id.ll_sync_users;
      LinearLayout llSyncUsers = ViewBindings.findChildViewById(rootView, id);
      if (llSyncUsers == null) {
        break missingId;
      }

      id = R.id.logoFullColor;
      ImageView logoFullColor = ViewBindings.findChildViewById(rootView, id);
      if (logoFullColor == null) {
        break missingId;
      }

      id = R.id.pb_mixers;
      ProgressBar pbMixers = ViewBindings.findChildViewById(rootView, id);
      if (pbMixers == null) {
        break missingId;
      }

      id = R.id.pb_rounds;
      ProgressBar pbRounds = ViewBindings.findChildViewById(rootView, id);
      if (pbRounds == null) {
        break missingId;
      }

      id = R.id.pb_users;
      ProgressBar pbUsers = ViewBindings.findChildViewById(rootView, id);
      if (pbUsers == null) {
        break missingId;
      }

      id = R.id.remoteViewerCustomMenu;
      ConstraintLayout remoteViewerCustomMenu = ViewBindings.findChildViewById(rootView, id);
      if (remoteViewerCustomMenu == null) {
        break missingId;
      }

      id = R.id.remoteViewerIcon;
      ImageView remoteViewerIcon = ViewBindings.findChildViewById(rootView, id);
      if (remoteViewerIcon == null) {
        break missingId;
      }

      id = R.id.titCajaBluetooth;
      TextView titCajaBluetooth = ViewBindings.findChildViewById(rootView, id);
      if (titCajaBluetooth == null) {
        break missingId;
      }

      id = R.id.titModelo;
      TextView titModelo = ViewBindings.findChildViewById(rootView, id);
      if (titModelo == null) {
        break missingId;
      }

      id = R.id.titNombre;
      TextView titNombre = ViewBindings.findChildViewById(rootView, id);
      if (titNombre == null) {
        break missingId;
      }

      id = R.id.toolbar_config_tablet_mixer;
      Toolbar toolbarConfigTabletMixer = ViewBindings.findChildViewById(rootView, id);
      if (toolbarConfigTabletMixer == null) {
        break missingId;
      }

      id = R.id.tv_caja_bluetooth_asoc;
      TextView tvCajaBluetoothAsoc = ViewBindings.findChildViewById(rootView, id);
      if (tvCajaBluetoothAsoc == null) {
        break missingId;
      }

      id = R.id.tv_mac;
      TextView tvMac = ViewBindings.findChildViewById(rootView, id);
      if (tvMac == null) {
        break missingId;
      }

      id = R.id.tv_mixers_percentage;
      TextView tvMixersPercentage = ViewBindings.findChildViewById(rootView, id);
      if (tvMixersPercentage == null) {
        break missingId;
      }

      id = R.id.tv_rounds_percentage;
      TextView tvRoundsPercentage = ViewBindings.findChildViewById(rootView, id);
      if (tvRoundsPercentage == null) {
        break missingId;
      }

      id = R.id.tv_title_tablet_mixer;
      TextView tvTitleTabletMixer = ViewBindings.findChildViewById(rootView, id);
      if (tvTitleTabletMixer == null) {
        break missingId;
      }

      id = R.id.tv_users_percentage;
      TextView tvUsersPercentage = ViewBindings.findChildViewById(rootView, id);
      if (tvUsersPercentage == null) {
        break missingId;
      }

      ConstraintLayout viewActivityTabletMixerConfig = (ConstraintLayout) rootView;

      return new ActivityTabletMixerConfigBinding((ConstraintLayout) rootView, bluetoothIcon,
          btnSincro, etTabletMixerDescription, etTabletMixerName, guidelineEnd, guidelineMain,
          iconCirc1, iconCirc2, itemDetail, ivExitConfig, keyboardIcon, layBTAsoc,
          layTabletMixerModel, layTabletMixerName, llConnectionStatus, llKeyboard, llSyncMixers,
          llSyncProgress, llSyncRounds, llSyncUsers, logoFullColor, pbMixers, pbRounds, pbUsers,
          remoteViewerCustomMenu, remoteViewerIcon, titCajaBluetooth, titModelo, titNombre,
          toolbarConfigTabletMixer, tvCajaBluetoothAsoc, tvMac, tvMixersPercentage,
          tvRoundsPercentage, tvTitleTabletMixer, tvUsersPercentage, viewActivityTabletMixerConfig);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
