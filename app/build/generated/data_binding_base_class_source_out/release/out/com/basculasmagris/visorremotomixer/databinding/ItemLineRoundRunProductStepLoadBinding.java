// Generated by view binder compiler. Do not edit!
package com.basculasmagris.visorremotomixer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.basculasmagris.visorremotomixer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemLineRoundRunProductStepLoadBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout llBarra1;

  @NonNull
  public final LinearLayout llBarra2;

  @NonNull
  public final TextView tvCurrentWeight;

  @NonNull
  public final TextView tvDiffWeight;

  @NonNull
  public final TextView tvProductName;

  private ItemLineRoundRunProductStepLoadBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout llBarra1, @NonNull LinearLayout llBarra2,
      @NonNull TextView tvCurrentWeight, @NonNull TextView tvDiffWeight,
      @NonNull TextView tvProductName) {
    this.rootView = rootView;
    this.llBarra1 = llBarra1;
    this.llBarra2 = llBarra2;
    this.tvCurrentWeight = tvCurrentWeight;
    this.tvDiffWeight = tvDiffWeight;
    this.tvProductName = tvProductName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemLineRoundRunProductStepLoadBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemLineRoundRunProductStepLoadBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_line_round_run_product_step_load, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemLineRoundRunProductStepLoadBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ll_barra1;
      LinearLayout llBarra1 = ViewBindings.findChildViewById(rootView, id);
      if (llBarra1 == null) {
        break missingId;
      }

      id = R.id.ll_barra2;
      LinearLayout llBarra2 = ViewBindings.findChildViewById(rootView, id);
      if (llBarra2 == null) {
        break missingId;
      }

      id = R.id.tv_current_weight;
      TextView tvCurrentWeight = ViewBindings.findChildViewById(rootView, id);
      if (tvCurrentWeight == null) {
        break missingId;
      }

      id = R.id.tv_diff_weight;
      TextView tvDiffWeight = ViewBindings.findChildViewById(rootView, id);
      if (tvDiffWeight == null) {
        break missingId;
      }

      id = R.id.tv_product_name;
      TextView tvProductName = ViewBindings.findChildViewById(rootView, id);
      if (tvProductName == null) {
        break missingId;
      }

      return new ItemLineRoundRunProductStepLoadBinding((LinearLayout) rootView, llBarra1, llBarra2,
          tvCurrentWeight, tvDiffWeight, tvProductName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
