// Generated by view binder compiler. Do not edit!
package com.basculasmagris.visorremotomixer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import android.widget.ToggleButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.basculasmagris.visorremotomixer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentRemoteMixerBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnInitFreeRound;

  @NonNull
  public final Button btnJump;

  @NonNull
  public final ToggleButton btnPause;

  @NonNull
  public final Button btnRest;

  @NonNull
  public final Button btnTara;

  @NonNull
  public final ProgressBar pbCurrentProduct;

  @NonNull
  public final RecyclerView rvMixerProductsToLoad;

  @NonNull
  public final TextView tvCurrentProduct;

  @NonNull
  public final TextView tvCurrentProductWeightPending;

  @NonNull
  public final TextView tvTitleProduct;

  @NonNull
  public final LinearLayout viewFragmentMixerRemoto;

  private FragmentRemoteMixerBinding(@NonNull LinearLayout rootView,
      @NonNull Button btnInitFreeRound, @NonNull Button btnJump, @NonNull ToggleButton btnPause,
      @NonNull Button btnRest, @NonNull Button btnTara, @NonNull ProgressBar pbCurrentProduct,
      @NonNull RecyclerView rvMixerProductsToLoad, @NonNull TextView tvCurrentProduct,
      @NonNull TextView tvCurrentProductWeightPending, @NonNull TextView tvTitleProduct,
      @NonNull LinearLayout viewFragmentMixerRemoto) {
    this.rootView = rootView;
    this.btnInitFreeRound = btnInitFreeRound;
    this.btnJump = btnJump;
    this.btnPause = btnPause;
    this.btnRest = btnRest;
    this.btnTara = btnTara;
    this.pbCurrentProduct = pbCurrentProduct;
    this.rvMixerProductsToLoad = rvMixerProductsToLoad;
    this.tvCurrentProduct = tvCurrentProduct;
    this.tvCurrentProductWeightPending = tvCurrentProductWeightPending;
    this.tvTitleProduct = tvTitleProduct;
    this.viewFragmentMixerRemoto = viewFragmentMixerRemoto;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentRemoteMixerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentRemoteMixerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_remote_mixer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentRemoteMixerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_init_free_round;
      Button btnInitFreeRound = ViewBindings.findChildViewById(rootView, id);
      if (btnInitFreeRound == null) {
        break missingId;
      }

      id = R.id.btn_jump;
      Button btnJump = ViewBindings.findChildViewById(rootView, id);
      if (btnJump == null) {
        break missingId;
      }

      id = R.id.btn_pause;
      ToggleButton btnPause = ViewBindings.findChildViewById(rootView, id);
      if (btnPause == null) {
        break missingId;
      }

      id = R.id.btn_rest;
      Button btnRest = ViewBindings.findChildViewById(rootView, id);
      if (btnRest == null) {
        break missingId;
      }

      id = R.id.btn_tara;
      Button btnTara = ViewBindings.findChildViewById(rootView, id);
      if (btnTara == null) {
        break missingId;
      }

      id = R.id.pb_current_product;
      ProgressBar pbCurrentProduct = ViewBindings.findChildViewById(rootView, id);
      if (pbCurrentProduct == null) {
        break missingId;
      }

      id = R.id.rv_mixer_products_to_load;
      RecyclerView rvMixerProductsToLoad = ViewBindings.findChildViewById(rootView, id);
      if (rvMixerProductsToLoad == null) {
        break missingId;
      }

      id = R.id.tv_current_product;
      TextView tvCurrentProduct = ViewBindings.findChildViewById(rootView, id);
      if (tvCurrentProduct == null) {
        break missingId;
      }

      id = R.id.tv_current_product_weight_pending;
      TextView tvCurrentProductWeightPending = ViewBindings.findChildViewById(rootView, id);
      if (tvCurrentProductWeightPending == null) {
        break missingId;
      }

      id = R.id.tv_title_product;
      TextView tvTitleProduct = ViewBindings.findChildViewById(rootView, id);
      if (tvTitleProduct == null) {
        break missingId;
      }

      LinearLayout viewFragmentMixerRemoto = (LinearLayout) rootView;

      return new FragmentRemoteMixerBinding((LinearLayout) rootView, btnInitFreeRound, btnJump,
          btnPause, btnRest, btnTara, pbCurrentProduct, rvMixerProductsToLoad, tvCurrentProduct,
          tvCurrentProductWeightPending, tvTitleProduct, viewFragmentMixerRemoto);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
