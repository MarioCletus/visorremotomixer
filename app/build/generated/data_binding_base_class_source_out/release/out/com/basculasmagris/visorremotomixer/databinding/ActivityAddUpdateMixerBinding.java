// Generated by view binder compiler. Do not edit!
package com.basculasmagris.visorremotomixer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.basculasmagris.visorremotomixer.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddUpdateMixerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputLayout TiMixerDescription;

  @NonNull
  public final TextInputLayout TiMixerName;

  @NonNull
  public final TextInputLayout TiRfid;

  @NonNull
  public final Button btnAddMixer;

  @NonNull
  public final ConstraintLayout clCreateMixer;

  @NonNull
  public final EditText etBtBox;

  @NonNull
  public final EditText etCalibration;

  @NonNull
  public final EditText etMac;

  @NonNull
  public final EditText etTara;

  @NonNull
  public final LinearLayout llDetailInfo;

  @NonNull
  public final TextInputLayout tiBtBox;

  @NonNull
  public final TextInputLayout tiCalibration;

  @NonNull
  public final TextInputLayout tiMac;

  @NonNull
  public final EditText tiMixerDescription;

  @NonNull
  public final EditText tiMixerName;

  @NonNull
  public final EditText tiRfid;

  @NonNull
  public final TextInputLayout tiTara;

  @NonNull
  public final Toolbar toolbarAddUpdateMixer;

  private ActivityAddUpdateMixerBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputLayout TiMixerDescription, @NonNull TextInputLayout TiMixerName,
      @NonNull TextInputLayout TiRfid, @NonNull Button btnAddMixer,
      @NonNull ConstraintLayout clCreateMixer, @NonNull EditText etBtBox,
      @NonNull EditText etCalibration, @NonNull EditText etMac, @NonNull EditText etTara,
      @NonNull LinearLayout llDetailInfo, @NonNull TextInputLayout tiBtBox,
      @NonNull TextInputLayout tiCalibration, @NonNull TextInputLayout tiMac,
      @NonNull EditText tiMixerDescription, @NonNull EditText tiMixerName, @NonNull EditText tiRfid,
      @NonNull TextInputLayout tiTara, @NonNull Toolbar toolbarAddUpdateMixer) {
    this.rootView = rootView;
    this.TiMixerDescription = TiMixerDescription;
    this.TiMixerName = TiMixerName;
    this.TiRfid = TiRfid;
    this.btnAddMixer = btnAddMixer;
    this.clCreateMixer = clCreateMixer;
    this.etBtBox = etBtBox;
    this.etCalibration = etCalibration;
    this.etMac = etMac;
    this.etTara = etTara;
    this.llDetailInfo = llDetailInfo;
    this.tiBtBox = tiBtBox;
    this.tiCalibration = tiCalibration;
    this.tiMac = tiMac;
    this.tiMixerDescription = tiMixerDescription;
    this.tiMixerName = tiMixerName;
    this.tiRfid = tiRfid;
    this.tiTara = tiTara;
    this.toolbarAddUpdateMixer = toolbarAddUpdateMixer;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddUpdateMixerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddUpdateMixerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_update_mixer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddUpdateMixerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id._ti_mixer_description;
      TextInputLayout TiMixerDescription = ViewBindings.findChildViewById(rootView, id);
      if (TiMixerDescription == null) {
        break missingId;
      }

      id = R.id._ti_mixer_name;
      TextInputLayout TiMixerName = ViewBindings.findChildViewById(rootView, id);
      if (TiMixerName == null) {
        break missingId;
      }

      id = R.id._ti_rfid;
      TextInputLayout TiRfid = ViewBindings.findChildViewById(rootView, id);
      if (TiRfid == null) {
        break missingId;
      }

      id = R.id.btn_add_mixer;
      Button btnAddMixer = ViewBindings.findChildViewById(rootView, id);
      if (btnAddMixer == null) {
        break missingId;
      }

      id = R.id.cl_create_mixer;
      ConstraintLayout clCreateMixer = ViewBindings.findChildViewById(rootView, id);
      if (clCreateMixer == null) {
        break missingId;
      }

      id = R.id.et_bt_box;
      EditText etBtBox = ViewBindings.findChildViewById(rootView, id);
      if (etBtBox == null) {
        break missingId;
      }

      id = R.id.et_calibration;
      EditText etCalibration = ViewBindings.findChildViewById(rootView, id);
      if (etCalibration == null) {
        break missingId;
      }

      id = R.id.et_mac;
      EditText etMac = ViewBindings.findChildViewById(rootView, id);
      if (etMac == null) {
        break missingId;
      }

      id = R.id.et_tara;
      EditText etTara = ViewBindings.findChildViewById(rootView, id);
      if (etTara == null) {
        break missingId;
      }

      id = R.id.ll_detail_info;
      LinearLayout llDetailInfo = ViewBindings.findChildViewById(rootView, id);
      if (llDetailInfo == null) {
        break missingId;
      }

      id = R.id.ti_bt_box;
      TextInputLayout tiBtBox = ViewBindings.findChildViewById(rootView, id);
      if (tiBtBox == null) {
        break missingId;
      }

      id = R.id.ti_calibration;
      TextInputLayout tiCalibration = ViewBindings.findChildViewById(rootView, id);
      if (tiCalibration == null) {
        break missingId;
      }

      id = R.id.ti_mac;
      TextInputLayout tiMac = ViewBindings.findChildViewById(rootView, id);
      if (tiMac == null) {
        break missingId;
      }

      id = R.id.ti_mixer_description;
      EditText tiMixerDescription = ViewBindings.findChildViewById(rootView, id);
      if (tiMixerDescription == null) {
        break missingId;
      }

      id = R.id.ti_mixer_name;
      EditText tiMixerName = ViewBindings.findChildViewById(rootView, id);
      if (tiMixerName == null) {
        break missingId;
      }

      id = R.id.ti_rfid;
      EditText tiRfid = ViewBindings.findChildViewById(rootView, id);
      if (tiRfid == null) {
        break missingId;
      }

      id = R.id.ti_tara;
      TextInputLayout tiTara = ViewBindings.findChildViewById(rootView, id);
      if (tiTara == null) {
        break missingId;
      }

      id = R.id.toolbar_add_update_mixer;
      Toolbar toolbarAddUpdateMixer = ViewBindings.findChildViewById(rootView, id);
      if (toolbarAddUpdateMixer == null) {
        break missingId;
      }

      return new ActivityAddUpdateMixerBinding((ConstraintLayout) rootView, TiMixerDescription,
          TiMixerName, TiRfid, btnAddMixer, clCreateMixer, etBtBox, etCalibration, etMac, etTara,
          llDetailInfo, tiBtBox, tiCalibration, tiMac, tiMixerDescription, tiMixerName, tiRfid,
          tiTara, toolbarAddUpdateMixer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
