// Generated by view binder compiler. Do not edit!
package com.basculasmagris.visorremotomixer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.basculasmagris.visorremotomixer.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddUpdateTabletMixerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputLayout TiRfid;

  @NonNull
  public final TextInputLayout TiTabletMixerDescription;

  @NonNull
  public final TextInputLayout TiTabletMixerName;

  @NonNull
  public final Button btnAddTabletMixer;

  @NonNull
  public final ConstraintLayout clCreateTabletMixer;

  @NonNull
  public final EditText etBtBox;

  @NonNull
  public final EditText etCalibration;

  @NonNull
  public final EditText etMac;

  @NonNull
  public final TextInputLayout tiBtBox;

  @NonNull
  public final TextInputLayout tiCalibration;

  @NonNull
  public final TextInputLayout tiMac;

  @NonNull
  public final EditText tiRfid;

  @NonNull
  public final EditText tiTabletMixerDescription;

  @NonNull
  public final EditText tiTabletMixerName;

  @NonNull
  public final Toolbar toolbarAddUpdateTabletMixer;

  private ActivityAddUpdateTabletMixerBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputLayout TiRfid, @NonNull TextInputLayout TiTabletMixerDescription,
      @NonNull TextInputLayout TiTabletMixerName, @NonNull Button btnAddTabletMixer,
      @NonNull ConstraintLayout clCreateTabletMixer, @NonNull EditText etBtBox,
      @NonNull EditText etCalibration, @NonNull EditText etMac, @NonNull TextInputLayout tiBtBox,
      @NonNull TextInputLayout tiCalibration, @NonNull TextInputLayout tiMac,
      @NonNull EditText tiRfid, @NonNull EditText tiTabletMixerDescription,
      @NonNull EditText tiTabletMixerName, @NonNull Toolbar toolbarAddUpdateTabletMixer) {
    this.rootView = rootView;
    this.TiRfid = TiRfid;
    this.TiTabletMixerDescription = TiTabletMixerDescription;
    this.TiTabletMixerName = TiTabletMixerName;
    this.btnAddTabletMixer = btnAddTabletMixer;
    this.clCreateTabletMixer = clCreateTabletMixer;
    this.etBtBox = etBtBox;
    this.etCalibration = etCalibration;
    this.etMac = etMac;
    this.tiBtBox = tiBtBox;
    this.tiCalibration = tiCalibration;
    this.tiMac = tiMac;
    this.tiRfid = tiRfid;
    this.tiTabletMixerDescription = tiTabletMixerDescription;
    this.tiTabletMixerName = tiTabletMixerName;
    this.toolbarAddUpdateTabletMixer = toolbarAddUpdateTabletMixer;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddUpdateTabletMixerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddUpdateTabletMixerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_update_tablet_mixer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddUpdateTabletMixerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id._ti_rfid;
      TextInputLayout TiRfid = ViewBindings.findChildViewById(rootView, id);
      if (TiRfid == null) {
        break missingId;
      }

      id = R.id._ti_tablet_mixer_description;
      TextInputLayout TiTabletMixerDescription = ViewBindings.findChildViewById(rootView, id);
      if (TiTabletMixerDescription == null) {
        break missingId;
      }

      id = R.id._ti_tablet_mixer_name;
      TextInputLayout TiTabletMixerName = ViewBindings.findChildViewById(rootView, id);
      if (TiTabletMixerName == null) {
        break missingId;
      }

      id = R.id.btn_add_tablet_mixer;
      Button btnAddTabletMixer = ViewBindings.findChildViewById(rootView, id);
      if (btnAddTabletMixer == null) {
        break missingId;
      }

      id = R.id.cl_create_tablet_mixer;
      ConstraintLayout clCreateTabletMixer = ViewBindings.findChildViewById(rootView, id);
      if (clCreateTabletMixer == null) {
        break missingId;
      }

      id = R.id.et_bt_box;
      EditText etBtBox = ViewBindings.findChildViewById(rootView, id);
      if (etBtBox == null) {
        break missingId;
      }

      id = R.id.et_calibration;
      EditText etCalibration = ViewBindings.findChildViewById(rootView, id);
      if (etCalibration == null) {
        break missingId;
      }

      id = R.id.et_mac;
      EditText etMac = ViewBindings.findChildViewById(rootView, id);
      if (etMac == null) {
        break missingId;
      }

      id = R.id.ti_bt_box;
      TextInputLayout tiBtBox = ViewBindings.findChildViewById(rootView, id);
      if (tiBtBox == null) {
        break missingId;
      }

      id = R.id.ti_calibration;
      TextInputLayout tiCalibration = ViewBindings.findChildViewById(rootView, id);
      if (tiCalibration == null) {
        break missingId;
      }

      id = R.id.ti_mac;
      TextInputLayout tiMac = ViewBindings.findChildViewById(rootView, id);
      if (tiMac == null) {
        break missingId;
      }

      id = R.id.ti_rfid;
      EditText tiRfid = ViewBindings.findChildViewById(rootView, id);
      if (tiRfid == null) {
        break missingId;
      }

      id = R.id.ti_tablet_mixer_description;
      EditText tiTabletMixerDescription = ViewBindings.findChildViewById(rootView, id);
      if (tiTabletMixerDescription == null) {
        break missingId;
      }

      id = R.id.ti_tablet_mixer_name;
      EditText tiTabletMixerName = ViewBindings.findChildViewById(rootView, id);
      if (tiTabletMixerName == null) {
        break missingId;
      }

      id = R.id.toolbar_add_update_tablet_mixer;
      Toolbar toolbarAddUpdateTabletMixer = ViewBindings.findChildViewById(rootView, id);
      if (toolbarAddUpdateTabletMixer == null) {
        break missingId;
      }

      return new ActivityAddUpdateTabletMixerBinding((ConstraintLayout) rootView, TiRfid,
          TiTabletMixerDescription, TiTabletMixerName, btnAddTabletMixer, clCreateTabletMixer,
          etBtBox, etCalibration, etMac, tiBtBox, tiCalibration, tiMac, tiRfid,
          tiTabletMixerDescription, tiTabletMixerName, toolbarAddUpdateTabletMixer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
