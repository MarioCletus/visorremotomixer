// Generated by view binder compiler. Do not edit!
package com.basculasmagris.visorremotomixer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.basculasmagris.visorremotomixer.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddUpdateRoundBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputLayout TiRoundDescription;

  @NonNull
  public final TextInputLayout TiRoundName;

  @NonNull
  public final FloatingActionButton btnAddCorralToRound;

  @NonNull
  public final EditText etCustomPercentage;

  @NonNull
  public final EditText etRoundDiet;

  @NonNull
  public final EditText etSummaryPer;

  @NonNull
  public final EditText etSummaryWeight;

  @NonNull
  public final EditText etTotalWeight;

  @NonNull
  public final FloatingActionButton fbAdjust;

  @NonNull
  public final ImageView imgVerify;

  @NonNull
  public final LinearLayout llCalculate;

  @NonNull
  public final LinearLayout llDiet;

  @NonNull
  public final LinearLayout llFirstLine;

  @NonNull
  public final LinearLayout llSecondLine;

  @NonNull
  public final LinearLayout llTotal;

  @NonNull
  public final RecyclerView rvRoundCorralList;

  @NonNull
  public final ScrollView svRound;

  @NonNull
  public final Switch switchPercentage;

  @NonNull
  public final TextInputLayout tiCustomPercentage;

  @NonNull
  public final EditText tiRoundDescription;

  @NonNull
  public final TextInputLayout tiRoundDiet;

  @NonNull
  public final EditText tiRoundName;

  @NonNull
  public final TextInputLayout tiSummaryPer;

  @NonNull
  public final TextInputLayout tiSummaryWeight;

  @NonNull
  public final TextInputLayout tiTotalWeight;

  @NonNull
  public final Toolbar toolbarAddUpdateRound;

  @NonNull
  public final TextView tvCorralsTitle;

  @NonNull
  public final TextView tvNoData;

  private ActivityAddUpdateRoundBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputLayout TiRoundDescription, @NonNull TextInputLayout TiRoundName,
      @NonNull FloatingActionButton btnAddCorralToRound, @NonNull EditText etCustomPercentage,
      @NonNull EditText etRoundDiet, @NonNull EditText etSummaryPer,
      @NonNull EditText etSummaryWeight, @NonNull EditText etTotalWeight,
      @NonNull FloatingActionButton fbAdjust, @NonNull ImageView imgVerify,
      @NonNull LinearLayout llCalculate, @NonNull LinearLayout llDiet,
      @NonNull LinearLayout llFirstLine, @NonNull LinearLayout llSecondLine,
      @NonNull LinearLayout llTotal, @NonNull RecyclerView rvRoundCorralList,
      @NonNull ScrollView svRound, @NonNull Switch switchPercentage,
      @NonNull TextInputLayout tiCustomPercentage, @NonNull EditText tiRoundDescription,
      @NonNull TextInputLayout tiRoundDiet, @NonNull EditText tiRoundName,
      @NonNull TextInputLayout tiSummaryPer, @NonNull TextInputLayout tiSummaryWeight,
      @NonNull TextInputLayout tiTotalWeight, @NonNull Toolbar toolbarAddUpdateRound,
      @NonNull TextView tvCorralsTitle, @NonNull TextView tvNoData) {
    this.rootView = rootView;
    this.TiRoundDescription = TiRoundDescription;
    this.TiRoundName = TiRoundName;
    this.btnAddCorralToRound = btnAddCorralToRound;
    this.etCustomPercentage = etCustomPercentage;
    this.etRoundDiet = etRoundDiet;
    this.etSummaryPer = etSummaryPer;
    this.etSummaryWeight = etSummaryWeight;
    this.etTotalWeight = etTotalWeight;
    this.fbAdjust = fbAdjust;
    this.imgVerify = imgVerify;
    this.llCalculate = llCalculate;
    this.llDiet = llDiet;
    this.llFirstLine = llFirstLine;
    this.llSecondLine = llSecondLine;
    this.llTotal = llTotal;
    this.rvRoundCorralList = rvRoundCorralList;
    this.svRound = svRound;
    this.switchPercentage = switchPercentage;
    this.tiCustomPercentage = tiCustomPercentage;
    this.tiRoundDescription = tiRoundDescription;
    this.tiRoundDiet = tiRoundDiet;
    this.tiRoundName = tiRoundName;
    this.tiSummaryPer = tiSummaryPer;
    this.tiSummaryWeight = tiSummaryWeight;
    this.tiTotalWeight = tiTotalWeight;
    this.toolbarAddUpdateRound = toolbarAddUpdateRound;
    this.tvCorralsTitle = tvCorralsTitle;
    this.tvNoData = tvNoData;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddUpdateRoundBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddUpdateRoundBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_update_round, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddUpdateRoundBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id._ti_round_description;
      TextInputLayout TiRoundDescription = ViewBindings.findChildViewById(rootView, id);
      if (TiRoundDescription == null) {
        break missingId;
      }

      id = R.id._ti_round_name;
      TextInputLayout TiRoundName = ViewBindings.findChildViewById(rootView, id);
      if (TiRoundName == null) {
        break missingId;
      }

      id = R.id.btn_add_corral_to_round;
      FloatingActionButton btnAddCorralToRound = ViewBindings.findChildViewById(rootView, id);
      if (btnAddCorralToRound == null) {
        break missingId;
      }

      id = R.id.et_custom_percentage;
      EditText etCustomPercentage = ViewBindings.findChildViewById(rootView, id);
      if (etCustomPercentage == null) {
        break missingId;
      }

      id = R.id.et_round_diet;
      EditText etRoundDiet = ViewBindings.findChildViewById(rootView, id);
      if (etRoundDiet == null) {
        break missingId;
      }

      id = R.id.et_summary_per;
      EditText etSummaryPer = ViewBindings.findChildViewById(rootView, id);
      if (etSummaryPer == null) {
        break missingId;
      }

      id = R.id.et_summary_weight;
      EditText etSummaryWeight = ViewBindings.findChildViewById(rootView, id);
      if (etSummaryWeight == null) {
        break missingId;
      }

      id = R.id.et_total_weight;
      EditText etTotalWeight = ViewBindings.findChildViewById(rootView, id);
      if (etTotalWeight == null) {
        break missingId;
      }

      id = R.id.fb_adjust;
      FloatingActionButton fbAdjust = ViewBindings.findChildViewById(rootView, id);
      if (fbAdjust == null) {
        break missingId;
      }

      id = R.id.img_verify;
      ImageView imgVerify = ViewBindings.findChildViewById(rootView, id);
      if (imgVerify == null) {
        break missingId;
      }

      id = R.id.ll_calculate;
      LinearLayout llCalculate = ViewBindings.findChildViewById(rootView, id);
      if (llCalculate == null) {
        break missingId;
      }

      id = R.id.ll_diet;
      LinearLayout llDiet = ViewBindings.findChildViewById(rootView, id);
      if (llDiet == null) {
        break missingId;
      }

      id = R.id.ll_first_line;
      LinearLayout llFirstLine = ViewBindings.findChildViewById(rootView, id);
      if (llFirstLine == null) {
        break missingId;
      }

      id = R.id.ll_second_line;
      LinearLayout llSecondLine = ViewBindings.findChildViewById(rootView, id);
      if (llSecondLine == null) {
        break missingId;
      }

      id = R.id.ll_total;
      LinearLayout llTotal = ViewBindings.findChildViewById(rootView, id);
      if (llTotal == null) {
        break missingId;
      }

      id = R.id.rv_round_corral_list;
      RecyclerView rvRoundCorralList = ViewBindings.findChildViewById(rootView, id);
      if (rvRoundCorralList == null) {
        break missingId;
      }

      id = R.id.sv_round;
      ScrollView svRound = ViewBindings.findChildViewById(rootView, id);
      if (svRound == null) {
        break missingId;
      }

      id = R.id.switch_percentage;
      Switch switchPercentage = ViewBindings.findChildViewById(rootView, id);
      if (switchPercentage == null) {
        break missingId;
      }

      id = R.id.ti_custom_percentage;
      TextInputLayout tiCustomPercentage = ViewBindings.findChildViewById(rootView, id);
      if (tiCustomPercentage == null) {
        break missingId;
      }

      id = R.id.ti_round_description;
      EditText tiRoundDescription = ViewBindings.findChildViewById(rootView, id);
      if (tiRoundDescription == null) {
        break missingId;
      }

      id = R.id.ti_round_diet;
      TextInputLayout tiRoundDiet = ViewBindings.findChildViewById(rootView, id);
      if (tiRoundDiet == null) {
        break missingId;
      }

      id = R.id.ti_round_name;
      EditText tiRoundName = ViewBindings.findChildViewById(rootView, id);
      if (tiRoundName == null) {
        break missingId;
      }

      id = R.id.ti_summary_per;
      TextInputLayout tiSummaryPer = ViewBindings.findChildViewById(rootView, id);
      if (tiSummaryPer == null) {
        break missingId;
      }

      id = R.id.ti_summary_weight;
      TextInputLayout tiSummaryWeight = ViewBindings.findChildViewById(rootView, id);
      if (tiSummaryWeight == null) {
        break missingId;
      }

      id = R.id.ti_total_weight;
      TextInputLayout tiTotalWeight = ViewBindings.findChildViewById(rootView, id);
      if (tiTotalWeight == null) {
        break missingId;
      }

      id = R.id.toolbar_add_update_round;
      Toolbar toolbarAddUpdateRound = ViewBindings.findChildViewById(rootView, id);
      if (toolbarAddUpdateRound == null) {
        break missingId;
      }

      id = R.id.tv_corrals_title;
      TextView tvCorralsTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvCorralsTitle == null) {
        break missingId;
      }

      id = R.id.tv_no_data;
      TextView tvNoData = ViewBindings.findChildViewById(rootView, id);
      if (tvNoData == null) {
        break missingId;
      }

      return new ActivityAddUpdateRoundBinding((ConstraintLayout) rootView, TiRoundDescription,
          TiRoundName, btnAddCorralToRound, etCustomPercentage, etRoundDiet, etSummaryPer,
          etSummaryWeight, etTotalWeight, fbAdjust, imgVerify, llCalculate, llDiet, llFirstLine,
          llSecondLine, llTotal, rvRoundCorralList, svRound, switchPercentage, tiCustomPercentage,
          tiRoundDescription, tiRoundDiet, tiRoundName, tiSummaryPer, tiSummaryWeight,
          tiTotalWeight, toolbarAddUpdateRound, tvCorralsTitle, tvNoData);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
